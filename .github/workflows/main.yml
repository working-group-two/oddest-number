# This is a basic workflow to help you get started with Actions

name: CI-deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ simpler-actions-example ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build & test
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "clean install"
          ssh-private-key: ${{ secrets.MAVEN_RELEASE_KEY }}
          ssh-passphrase: ${{ secrets.MAVEN_RELEASE_KEY_PASSPHRASE }}
          gpg-enabled: "true"
          gpg-key-id: "5614387E34B47A75"
          gpg-key: ${{ secrets.MAVEN_RELEASE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_RELEASE_KEY_PASSPHRASE }}
      - name: Release
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Dmaven.deploy.skip=true"
          maven-development-version-number: \${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT
          maven-release-version-number: \${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}
          git-release-bot-name: "team products"
          git-release-bot-email: "products@wgtwo.com"
          maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=true"
          gpg-enabled: "true"
          gpg-key-id: "5614387E34B47A75"
          gpg-key: ${{ secrets.MAVEN_RELEASE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_RELEASE_KEY_PASSPHRASE }}
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
      - name: set up maven central repository
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: 'ossrh'
          server-username: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          server-password: ${{ secrets.SONATYPE_NEXUS_SECRET }}
